{"version":3,"file":"static/js/124.ca182e79.chunk.js","mappings":"gMACaA,E,QAAYC,GAAAA,EAAH,gF,SCMtB,EALkB,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACjB,OACI,SAAC,KAAD,CAAcA,KAAMA,EAAMC,OAAQ,SAAAC,GAAO,OAAI,SAACJ,EAAD,UAAYI,GAAhB,GAEhD,C,iICHYC,GAAYJ,EAAAA,EAAAA,IAAOK,EAAAA,GAAPL,CAAH,6qBA4BTM,EAAaN,EAAAA,GAAAA,MAAH,oLASVO,GAAaP,EAAAA,EAAAA,IAAOQ,EAAAA,GAAPR,CAAH,0WAiBVS,EAAcT,EAAAA,GAAAA,OAAH,yV,iDC3ClBU,EAAgB,CAAEC,MAAO,GAAIC,SAAU,IAEvCC,EAASC,EAAAA,KAAaC,MAAM,CAChCJ,MAAOG,EAAAA,KAAaE,IAAI,GAAGC,WAC3BL,SAAUE,EAAAA,KAAaE,IAAI,GAAGE,IAAI,IAAID,aAGzB,SAASE,IACtB,IAAMC,GAAWC,EAAAA,EAAAA,MASjB,OACE,SAAC,KAAD,CACEX,cAAeA,EACfY,iBAAkBT,EAClBU,SAXiB,SAACC,EAAD,GAA4B,IAAjBC,EAAgB,EAAhBA,UACtBd,EAAoBa,EAApBb,MAAOC,EAAaY,EAAbZ,SAEfQ,GAASM,EAAAA,EAAAA,IAAM,CAAEf,MAAAA,EAAOC,SAAAA,KAAae,SAASC,MAAK,kBAAIC,EAAAA,GAAAA,QAAc,uBAAlB,IAA2CC,OAAM,kBAAKD,EAAAA,GAAAA,MAAY,kCAAjB,IACpGJ,GACD,EAGC,UAKE,UAACrB,EAAD,YACE,UAACE,EAAD,CAAYyB,QAAQ,QAApB,UAA4B,SAE1B,SAACxB,EAAD,CAAYyB,KAAK,QAAQ/B,KAAK,WAC9B,SAACgC,EAAA,EAAD,CAAWhC,KAAM,cAGnB,UAACK,EAAD,CAAYyB,QAAQ,WAApB,UAA+B,YAE7B,SAACxB,EAAD,CAAYyB,KAAK,WAAW/B,KAAK,cACjC,SAACgC,EAAA,EAAD,CAAWhC,KAAM,iBAEnB,SAACQ,EAAD,CAAauB,KAAK,SAAlB,SAA2B,cAIlC,CCnDc,SAASE,IACtB,OACE,0BACE,SAACf,EAAD,KAGL,C","sources":["components/FormError/FormError.styled.js","components/FormError/FormError.jsx","components/LoginForm/LoginFormstyled.js","components/LoginForm/LoginForm.jsx","pages/Login.js"],"sourcesContent":["import styled from 'styled-components';\nexport const ErrorText = styled.p`\n  color: red;\n  font-size: 15px;\n  font-weight: 600;\n`;\n","import { ErrorMessage } from \"formik\";\nimport { ErrorText } from \"./FormError.styled\";\nconst FormError = ({ name }) => {\n    return (\n        <ErrorMessage name={name} render={message => <ErrorText>{message}</ErrorText>}/>\n    )\n};\nexport default FormError;","import styled from 'styled-components';\nimport { Form, Field } from 'formik';\n\nexport const FormLogin = styled(Form)`\n  /* border: 2px solid yellow;\n  border-radius: 40px;\n  background: linear-gradient(146deg, #6c6c66, transparent);\n  width: 400px;\n  height: 300px;\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n  padding: 20px;\n  justify-content: space-between;\n  margin-bottom: 20px;\n  margin-right: auto;\n  margin-left: auto; */\n  display: flex;\n  flex-direction: column;\n  flex-shrink: 0;\n  align-items: flex-start;\n  background: linear-gradient(146deg, #6c6c66, transparent);\n  border: 2px solid black;\n  border-radius: 10px;\n  width: 300px;\n  padding: 10px;\n  margin-right: avto;\n  margin-left: avto;\n  height: fit-content;\n  gap: 20px;\n`;\nexport const LabelLogin = styled.label`\n  display: flex;\n  flex-direction: column;\n  gap: 5px;\n  font-size: 20px;\n  font-weight: 600;\n  font-family: sans-serif;\n  color: rgb(217, 232, 64);\n`;\nexport const InputLogin = styled(Field)`\n  width: 250px;\n  padding: 5px 10px;\n  margin-top: 5px;\n  width: 200px;\n  cursor: text;\n  border: 1px solid rgba(255, 115, 0, 0.8);\n  border-radius: 5px;\n  font-size: 16px;\n  margin-left: auto;\n  margin-right: auto;\n\n  &:focus {\n    border: 1px solid rgb(197 216 14);\n    box-shadow: rgb(207 226 21) 5px 0px 27px -8px;\n  }\n`;\nexport const ButtonLogin = styled.button`\n  width: 100px;\n  height: 35px;\n  padding: 5px;\n  background-color: white;\n  border: 1px solid #dedede;\n  font-size: 15px;\n  font-weight: 600;\n  border-radius: 6px;\n  cursor: pointer;\n\n  &:hover,\n  &:focus {\n    background-color: rgb(202 222 4);\n    box-shadow: 5px 0px 27px -8px rgba(91, 95, 206, 1);\n  }\n`;\n","import { useDispatch } from 'react-redux';\nimport { logIn } from 'redux/auth/auth-operations';\nimport {\n  FormLogin,\n  LabelLogin,\n  InputLogin,\n  ButtonLogin,\n} from '../../components/LoginForm/LoginFormstyled';\nimport {  Formik } from 'formik';\nimport * as Yup from 'yup';\nimport FormError from 'components/FormError/FormError';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst initialValues = { email: '', password: '' };\n\nconst schema = Yup.object().shape({\n  email: Yup.string().min(4).required(),\n  password: Yup.string().min(5).max(16).required(),\n});\n\nexport default function LoginForm() {\n  const dispatch = useDispatch();\n\n  const handleSubmit = (values, { resetForm }) => {\n    const { email, password } = values;\n\n    dispatch(logIn({ email, password })).unwrap().then(()=>toast.success(\"Login In succesfully\")).catch(()=> toast.error(\"Something went wrong. Try again\"));;\n    resetForm();\n  };\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      validationSchema={schema}\n      onSubmit={handleSubmit}\n    >\n      <FormLogin>\n        <LabelLogin htmlFor=\"email\">\n          Email\n          <InputLogin type=\"email\" name=\"email\" />\n          <FormError name= \"email\"/>\n        </LabelLogin>\n\n        <LabelLogin htmlFor=\"password\">\n          Password\n          <InputLogin type=\"password\" name=\"password\" />\n          <FormError name =\"password\"/>\n        </LabelLogin>\n        <ButtonLogin type=\"submit\">Login</ButtonLogin>\n      </FormLogin>\n    </Formik>\n  );\n}\n","import LoginForm from '../components/LoginForm/LoginForm';\n\nexport default function Login() {\n  return (\n    <div>\n      <LoginForm />\n    </div>\n  );\n}\n"],"names":["ErrorText","styled","name","render","message","FormLogin","Form","LabelLogin","InputLogin","Field","ButtonLogin","initialValues","email","password","schema","Yup","shape","min","required","max","LoginForm","dispatch","useDispatch","validationSchema","onSubmit","values","resetForm","logIn","unwrap","then","toast","catch","htmlFor","type","FormError","Login"],"sourceRoot":""}