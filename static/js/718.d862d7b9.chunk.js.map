{"version":3,"file":"static/js/718.d862d7b9.chunk.js","mappings":"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","sources":["components/FormError/FormError.styled.js","components/FormError/FormError.jsx","components/ContactListItem/ContactListItem.styled.js","components/ContactListItem/ContactListItem.jsx","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.jsx","components/ContactForm/ContactForm.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","pages/Contacts.styled.js","pages/Contacts.js"],"sourcesContent":["import styled from 'styled-components';\nexport const ErrorText = styled.p`\n  color: red;\n  font-size: 15px;\n  font-weight: 600;\n`;\n","import { ErrorMessage } from \"formik\";\nimport { ErrorText } from \"./FormError.styled\";\nconst FormError = ({ name }) => {\n    return (\n        <ErrorMessage name={name} render={message => <ErrorText>{message}</ErrorText>}/>\n    )\n};\nexport default FormError;","import styled from 'styled-components';\n\nexport const ListItem = styled.li`\n  display: flex;\n  gap: 15px;\n  position: relative;\n  &::before {\n    content: '';\n    position: absolute;\n    left: -20px;\n    top: 10px;\n    width: 8px;\n    height: 8px;\n    border-radius: 50%;\n    background-color: black;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { ListItem } from './ContactListItem.styled';\nimport { ButtonAddDeleteContact } from 'components/ContactForm/ContactForm.styled';\nimport { deleteContact } from '../../redux/contacts/contacts-operations';\nimport { useDispatch } from 'react-redux';\nimport { fetchContacts } from '../../redux/contacts/contacts-operations';\nexport const ContactListItem = ({ contact }) => {\n  const dispatch = useDispatch();\n\n  const handleDeleteContact = async () => {\n    await dispatch(deleteContact(contact.id));\n    dispatch(fetchContacts());\n  };\n\n  return (\n    <>\n      <ListItem key={contact.id}>\n        {contact.name} : {contact.number}\n        <ButtonAddDeleteContact onClick={handleDeleteContact}>\n          Delete\n        </ButtonAddDeleteContact>\n      </ListItem>\n    </>\n  );\n};\nContactListItem.propTypes = {\n  contact: PropTypes.object.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const Message = styled.div`\n  color: #9c27b0;\n  font-size: 25px;\n  font-weight: 700;\n  margin-bottom: 20px;\n`;\nexport const ContactsList = styled.ul`\n  margin-top: 20px;\n  margin-left: 40px;\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n  font-size: 20px;\n  color: black;\n  font-size: 25px;\n  font-weight: 600;\n  margin-bottom: 20px;\n`;\n","import { ContactListItem } from 'components/ContactListItem/ContactListItem';\nimport { ContactsList, Message } from './ContactList.styled';\n\nimport { getFilterValue } from '../../redux/filterSlice';\nimport { selectContactsItems } from '../../redux/contacts/contactsSlice';\nimport { useSelector } from 'react-redux';\n\nexport const ContactList = () => {\n  const contacts = useSelector(selectContactsItems);\n\n  const filter = useSelector(getFilterValue);\n\n  const getFilteredContacts = (contacts, filter) => {\n   \n    if (filter) {\n      return contacts.filter(contact =>\n        contact.name.toLowerCase().includes(filter.toLowerCase())\n      );\n    } else {\n      return contacts;\n    }\n  };\n\n  const filteredContacts = getFilteredContacts(contacts, filter);\n\n  if (!filteredContacts || filteredContacts.length === 0) {\n    return <Message>No contacts found</Message>;\n  }\n  return (\n    <ContactsList>\n      {filteredContacts.map(contact => (\n        <ContactListItem key={contact.id} contact={contact} />\n      ))}\n    </ContactsList>\n  );\n};\n","import {\n  FormWrap,\n  Label,\n  Input,\n  ButtonAddDeleteContact,\n} from './ContactForm.styled';\nimport FormError from 'components/FormError/FormError';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectContactsItems } from '../../redux/contacts/contactsSlice';\nimport { addContact } from 'redux/contacts/contacts-operations';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst initialValues = { name: '', number: '' };\n\nconst schema = Yup.object().shape({\n  name: Yup.string().min(3).required(),\n  number: Yup.number().min(4).required(),\n});\n\nexport default function ContactForm() {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContactsItems);\n\n  const handleSubmit = (values, { resetForm }) => {\n    const { name, number } = values;\n    const isDuplicateName = contacts.find(\n      contact => contact.name.toLowerCase() === name.toLowerCase()\n    );\n\n    if (isDuplicateName) {\n      toast.info(`${name} is already in contacts`);\n      return;\n    }\n\n    dispatch(addContact({ name, number }));\n\n    resetForm();\n  };\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      validationSchema={schema}\n      onSubmit={handleSubmit}\n    >\n      <FormWrap>\n        <Label htmlFor=\"name\">\n          Name\n          <Input type=\"text\" name=\"name\" />\n          <FormError name=\"name\" />\n        </Label>\n\n        <Label htmlFor=\"tel\">\n          Number\n          <Input type=\"tel\" name=\"number\" />\n          <FormError name=\"number\" />\n        </Label>\n        <ButtonAddDeleteContact type=\"submit\">\n          Add contact\n        </ButtonAddDeleteContact>\n      </FormWrap>\n    </Formik>\n  );\n}\n","import styled from 'styled-components';\n\nexport const FilterWrap = styled.div`\n display: flex;\n  flex-direction: column;\n  flex-shrink: 0;\n  align-items: flex-start;\n  background: linear-gradient(146deg, #6c6c66, transparent);\n  border: 2px solid black;\n  border-radius: 10px;\n  width: 300px;\n  padding: 10px;\n  margin-right: avto;\n  margin-left: avto;\n  height: fit-content;\n  gap: 20px;\n`;\n\nexport const LabelFilter = styled.label`\n  display: flex;\n  flex-direction: column;\n  gap: 15px;\n  font-size: 20px;\n  font-weight: 600;\n  font-family: sans-serif;\n  color: rgb(217, 232, 64);\n`;\nexport const InputFilter = styled.input`\n  width: 250px;\n  padding: 5px 10px;\n  margin-top: 5px;\n  width: 200px;\n  cursor: text;\n  border: 1px solid rgba(255, 115, 0, 0.8);\n  border-radius: 5px;\n  font-size: 16px;\n  margin-left: auto;\n  margin-right: auto;\n\n  &:focus {\n    border: 1px solid rgb(197 216 14);\n    box-shadow: rgb(207 226 21) 5px 0px 27px -8px;\n  }\n`;\n","import { LabelFilter, InputFilter, FilterWrap } from './Filter.styled';\nimport { getFilterValue, setFilter } from '../../redux/filterSlice';\nimport { useDispatch, useSelector } from 'react-redux';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(getFilterValue);\n\n  const changeFilter = evt => {\n    return dispatch(setFilter(evt.target.value));\n  };\n\n  return (\n    <FilterWrap>\n    <LabelFilter>\n      Find contact by name\n      <InputFilter type=\"text\" value={filter} onChange={changeFilter} />\n      </LabelFilter>\n    </FilterWrap>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const Container = styled.div`\ndisplay: flex;\npadding: 15px;\njustify-content:space-around;\n`;\nexport const Div = styled.div`\ndisplay: block;\nmargin-left: auto;\nmargin-right: auto;\n\n`;\n\nexport const Title = styled.h1`\nmargin-bottom: 20px;\nfont-size: 35px;\n`;\n\nexport const FilterTitle = styled.p`\n  margin-bottom: 3px;\n\n  font-size: 18px;\n  text-align: center;\n  color: white;\n`;\n\nexport const NoContacts = styled.p`\n  color: white;\n`;","import { useDispatch, useSelector } from 'react-redux';\nimport { useEffect } from 'react';\nimport { fetchContacts } from 'redux/contacts/contacts-operations';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport ContactForm from 'components/ContactForm/ContactForm';\nimport { Filter } from 'components/Filter/Filter';\nimport { Container, Div, Title } from './Contacts.styled';\nimport { selectIsLoading } from '../redux/contacts/contactsSlice';\nimport { selectError } from '../redux/contacts/contactsSlice';\nimport { Loader } from 'components/Loader/Loader';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <Container>\n      <Div>\n        {isLoading && !error && <b>Request in progress...</b>}\n\n        <Title>Add new contact</Title>\n        <ContactForm />\n      </Div>\n      <Div>\n        {isLoading && <Loader />}\n\n        <Title>Find the desired contact</Title>\n        <Filter />\n        <ContactList />\n      </Div>\n    </Container>\n  );\n}\n"],"names":["ErrorText","styled","name","render","message","ListItem","ContactListItem","contact","dispatch","useDispatch","handleDeleteContact","deleteContact","id","fetchContacts","number","onClick","Message","ContactsList","ContactList","filteredContacts","contacts","filter","toLowerCase","includes","getFilteredContacts","useSelector","selectContactsItems","getFilterValue","length","map","initialValues","schema","Yup","shape","min","required","ContactForm","validationSchema","onSubmit","values","resetForm","find","toast","addContact","htmlFor","type","FormError","FilterWrap","LabelFilter","InputFilter","Filter","value","onChange","evt","setFilter","target","Container","Div","Title","Contacts","isLoading","selectIsLoading","error","selectError","useEffect","Loader"],"sourceRoot":""}